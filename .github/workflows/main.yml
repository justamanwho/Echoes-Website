name: Deploy

on:
  push:
    # Can't use secrets here, so allow common branches and gate below
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Only run when the pushed branch matches your secret MAIN_BRANCH
    if: ${{ github.ref == format('refs/heads/{0}', secrets.MAIN_BRANCH) }}

    steps:
      - name: Deploy via SSH (hard reset)
        uses: appleboy/ssh-action@v1.0.3
        env:
          WORK_DIR: ${{ secrets.WORK_DIR }}
          MAIN_BRANCH: ${{ secrets.MAIN_BRANCH }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e

            cd "$WORK_DIR"

            # Force the server to match GitHub exactly
            git fetch origin "$MAIN_BRANCH"
            git reset --hard "origin/$MAIN_BRANCH"
            git clean -fdx

            # Python deps (keep your current layout)
            if [ -d .venv ]; then
              source .venv/bin/activate
            else
              python3 -m venv .venv
              source .venv/bin/activate
            fi
            pip install --upgrade pip
            [ -f requirements.txt ] && pip install -r requirements.txt

            # Restart your service (change name if yours differs)
            sudo systemctl restart echoes-website
            sudo systemctl status --no-pager --lines=5 echoes-website || true
